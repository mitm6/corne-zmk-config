/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define ARROWS_L  1
#define NUMBERS_L 2

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <22 23>;
        };

        combo_bck {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        combo_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <20 21>;
        };

        combo_right {
            bindings = <&kp RIGHT>;
            key-positions = <21 22>;
        };

        combo_left {
            bindings = <&kp LEFT>;
            key-positions = <19 20>;
        };

        combo_down {
            bindings = <&kp DOWN>;
            key-positions = <32 33>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &hm GRAVE Q  &kp W        &kp E           &kp R             &kp T             &kp Y             &kp U              &kp I                &kp O             &hm TILDE P     &kp TILDE
&kp LALT   &hm LSHFT A  &kp S        &kp D           &hm LEFT_SHIFT F  &kp G             &kp H             &hm RIGHT_SHIFT J  &kp K                &kp L             &hm SQT SEMI    &kp APOS
&kp GLOBE  &hm GLOBE Z  &hm LCTRL X  &hm LEFT_ALT C  &hm LEFT_GUI V    &kp B             &kp N             &hm RIGHT_GUI M    &hm RIGHT_ALT COMMA  &hm RCTRL PERIOD  &hm RCTRL FSLH  &kp SPACE
                                     &kp SHIFT          &mo 2             &hm LCMD SPACE    &hm SPACE RETURN  &mo NUMBERS_L      &mo 1
            >;
        };

        arrows_layer {
            bindings = <
&bt BT_CLR  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5        &kp SLCK   &kp LCTRL  &kp LSHFT  &kp TAB    &kp GUI   &kp TILDE
&none   &kp F6   &kp F7   &kp F8        &kp F9        &kp F10       &kp PG_UP  &kp LEFT   &kp UP     &kp RIGHT  &kp APOS  &kp LSHFT
&kp ESC                &kp F11  &kp F12  &bt BT_SEL 1  &bt BT_SEL 2  &none    &kp PG_DN  &kp HOME   &kp DOWN   &kp END    &none     &kp LCTRL
                                         &none         &kp LEFT_ALT  &kp LSHFT     &kp LCMD   &kp LCTRL  &none
            >;
        };

        numbers_layer {
            bindings = <
&none  &none      &hm EXCL N1       &hm AT N2     &hm HASH N3   &kp PLUS       &kp LGUI   &kp RCTRL  &kp LALT       &kp DEL        &kp BSPC  &none
&none  &kp LSHFT  &hm DLLR N4       &hm PRCNT N5  &hm CARET N6  &kp MINUS      &kp MINUS  &kp EQUAL  &kp LPAR       &kp RPAR       &kp BSLH  &none
&none  &kp DOT    &hm AMPERSAND N7  &hm STAR N8   &hm LPAR N9   &hm RPAR N0    &kp UNDER  &kp PLUS   &hm LBRC LBKT  &hm RBRC RBKT  &kp PIPE  &none
                                    &kp DOT       &none         &none       &kp LCMD   &none      &kp LSHFT
            >;
        };
    };
};
